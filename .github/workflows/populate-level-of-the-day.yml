name: Populate Level of the Day

on:
  schedule:
    # Run at midnight UTC every day
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      target_date:
        description: 'Target date for level generation (YYYY-MM-DD format, optional)'
        required: false
        type: string

jobs:
  populate-level:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Run database migrations
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        go run github.com/steebchen/prisma-client-go db push

    - name: Populate level of the day
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        if [ -n "${{ github.event.inputs.target_date }}" ]; then
          go run cmd/populate-level-of-the-day/main.go "${{ github.event.inputs.target_date }}"
        else
          # Generate for tomorrow (default behavior)
          go run cmd/populate-level-of-the-day/main.go
        fi

    - name: Notify on success
      if: success()
      run: echo "Level of the day populated successfully!"

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Level of the Day Population Failed',
            body: `The GitHub Action to populate the level of the day failed.\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            labels: ['bug', 'automated']
          })
